{"componentChunkName":"component---src-components-post-post-js","path":"/amend-an-existing-remote-commit","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Amend an existing remote commit\",\n  \"date\": \"2021-01-02\",\n  \"path\": \"/amend-an-existing-remote-commit\",\n  \"technologies\": [\"git\"],\n  \"description\": \"Learn how to amend an existing commit pushed in a remote repository.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"why-\"\n  }, \"Why ?\"), mdx(\"p\", null, \"A day at work, Github sends us a security notification telling us a developer pushed a secret to a remote repository. None of us sees it because the developer pushed the commit a year ago. To fix this, we had two solutions : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Change the secret;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Edit the commit and rewrite history.\\nBecause the target server was a production server, we choose the first option.\")), mdx(\"p\", null, \"Let's imagine we have a git history like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-git\"\n  }), \"eade3eb\\n14a5d7f\\n...\\n24bbfca\\n3f1ed30\\n1dbbd2e\\n94831b3\\n16e7ca6 # This is the commit containing the secret key\\n16375d8\\n\")), mdx(\"p\", null, \"The biggest issue is the commit date back to a year ago and the history grows up fastly. you need to get back in history, pick the commit, edit it, and push the fix without conflict. After several searches, here's how to do it :\"), mdx(\"h1\", {\n    \"id\": \"checkout-the-commit\"\n  }, \"Checkout the commit\"), mdx(\"p\", null, \"First, you will use the rebase git command to checkout the commit with hash \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"16e7ca6\"), \"running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git rebase -i '16e7ca6^'\"), \". Please note the caret \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"^\"), \" at the end of the command line because we need actually to rebase back to the commit before the one you wish to modify. Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-i\"), \" option to rebase with interactive mode.\"), mdx(\"br\", null), mdx(\"p\", null, \"Once the previous command ends, you should see the list of all commits in the history (named by hashes) : \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-git\"\n  }), \"pick 16e7ca6\\npick 94831b3 \\npick 1dbbd2e\\npick 24bbfca\\n...\\npick 14a5d7f\\npick eade3eb\\n\")), mdx(\"h1\", {\n    \"id\": \"manage-your-rebase\"\n  }, \"Manage your rebase\"), mdx(\"p\", null, \"Change \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pick\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"edit\"), \" on the line mentioning \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"16e7ca6\"), \". Save your update. At this moment Git will interpret and automatically execute commands in files. It seems that Git will checkout your branch to your commit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"16e7ca6\"), \".\"), mdx(\"p\", null, \"Fix your code, save your files, and amend your commit running: \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"git commit --all --amend --no-edit\\n\")), mdx(\"h1\", {\n    \"id\": \"end-your-rebase\"\n  }, \"End your rebase\"), mdx(\"p\", null, \"Continue your rebase with the option \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--continue\"), \": \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"git rebase --continue\\n\")), mdx(\"p\", null, \"This will end your rebase (if no conflicts) and reapply all commits to the latest.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Amending an old commit will update every SHA-1 of your history. Pushing this update needs to force push and rewrite all your history. Take care of it you can easily lose data or override commits !\")), mdx(\"p\", null, \"To push and override your remote existing repository, just run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git push --force\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Amend an existing remote commit","description":"Learn how to amend an existing commit pushed in a remote repository.","date":"19 hours ago"},"headings":[{"value":"Why ?"},{"value":"Checkout the commit"},{"value":"Manage your rebase"},{"value":"End your rebase"}],"tableOfContents":{"items":[{"url":"#why-","title":"Why ?"},{"url":"#checkout-the-commit","title":"Checkout the commit"},{"url":"#manage-your-rebase","title":"Manage your rebase"},{"url":"#end-your-rebase","title":"End your rebase"}]}}},"pageContext":{"slug":"/amend-an-existing-remote-commit"}}}